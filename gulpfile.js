var gulp = require('gulp'),
    fs   = require('fs'),
    readline = require('readline'),
    moment = require('moment'),
    frontMatter = require('front-matter'),
    slugify = require('slugify'),
    rimraf = require('rimraf')
    exec = require('exec-sync');

var POSTS_DIRECTORY = '_posts/'

gulp.task('default', function() {
  // place code for your default task here
});

/**
 * Creates a new draft post in the POSTS_DIRECTORY with the current date
 */
gulp.task('new-post', function() {
  var date = moment(),
      postPath = POSTS_DIRECTORY + 'DRAFT-' + date.format("YYYY-MM-DD") + '.md';

  if(!fs.existsSync(postPath)) {
    fs.writeFile(postPath, "---\nlayout: post\ndate: \"" +  date.format('YYYY-MM-DD HH:mm') + "\"\n---")
  } else {
    console.log("Post already exists")
  }
});

gulp.task('publish-tags', ['generate-tag-pages'], function () {
  exec('git add tags')
  exec('git commit -m "Autogenerated tag pages"')
  exec('git push')
})

/**
 * Generates tag pages
 */
gulp.task('generate-tag-pages', function () {
  exec('jekyll build')
  var posts = JSON.parse(fs.readFileSync('_site/posts.json').toString())
        tags = {};

  for (var i = 0; i < posts.length; i++) {
    var postTags = posts[i].tags
    if(postTags) {
      if(postTags instanceof Array == false)
        postTags = [postTags]

      for (var j = 0; j < postTags.length; j++) {
        if(!tags[postTags[j]])
          tags[postTags[j]] = []

        tags[postTags[j]].push(posts[i])
      };
    }
  };

  rimraf('tags', function () {
    fs.mkdirSync('tags')
    var tagIndex = '---\nlayout: "post"\ntitle: Tags\n---\n'

    for(var tag in tags) {
      var slug = slugify(tag).toLowerCase(),
          tagFile = slug+'.md',
          tagHtml = "";

      tagHtml += "---\nlayout: post\ntitle: \"Posts tagged with: "+tag+"\"\npermalink: tags/"+slug+"/\n---\n"
      tagIndex += "["+tag+"](/tags/"+slug+")\n"

      for (var i = 0; i < tags[tag].length; i++) {
        var post = tags[tag][i]
        tagHtml += "["+post.title+"]("+post.url+")\n"
      };
      fs.writeFileSync('tags/'+tagFile, tagHtml)
    }
    fs.writeFileSync('tags/index.md', tagIndex)
  })

})